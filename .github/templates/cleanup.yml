name: Test CI Cleanup

on:
  workflow_dispatch:  # Manual trigger
  push:
    branches:
      - '*'

jobs:
  cleanup:
    name: Cleanup Container Images
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # First list all package versions
      - name: Get package versions
        id: get-versions
        run: |
          echo "Current package versions before cleanup:"
          gh api \
            -H "Accept: application/vnd.github+json" \
            /user/packages/container/app-source/versions \
            --jq '.[].metadata.container.tags'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Delete untagged versions safely
      - name: Delete untagged versions
        uses: actions/delete-package-versions@v4
        continue-on-error: true
        with:
          package-name: 'app-source'
          package-type: 'container'
          token: ${{ secrets.GITHUB_TOKEN }}
          delete-only-untagged-versions: true
          min-versions-to-keep: 0

      # Keep only recent tagged versions
      - name: Clean up old tagged versions
        uses: actions/delete-package-versions@v4
        continue-on-error: true
        with:
          package-name: 'app-source'
          package-type: 'container'
          token: ${{ secrets.GITHUB_TOKEN }}
          min-versions-to-keep: 5
          delete-only-untagged-versions: false

      # List remaining versions
      - name: List remaining versions
        run: |
          echo "Remaining package versions after cleanup:"
          gh api \
            -H "Accept: application/vnd.github+json" \
            /user/packages/container/app-source/versions \
            --jq '.[].metadata.container.tags'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
