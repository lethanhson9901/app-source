# Top level default configuration for all hooks
default_language_version:
  python: python3.11
default_stages: [commit, push]
fail_fast: true
minimum_pre_commit_version: "3.5.0"

repos:
# Essential Git checks
- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v5.0.0
  hooks:
  - id: check-case-conflict
  - id: check-merge-conflict
  - id: check-symlinks
  - id: check-yaml
    args: [--allow-multiple-documents]
  - id: check-toml
  - id: check-json
  - id: detect-private-key
  - id: end-of-file-fixer
  - id: trailing-whitespace
    args: [--markdown-linebreak-ext=md]
  - id: mixed-line-ending
    args: [--fix=lf]
  - id: check-added-large-files
    args: ['--maxkb=500']
  - id: check-ast
  - id: debug-statements

# Python code formatting
- repo: https://github.com/psf/black
  rev: 24.10.0
  hooks:
  - id: black
    files: ^src/
    exclude: ^tests/

# Python import sorting
- repo: https://github.com/PyCQA/isort
  rev: 5.13.2
  hooks:
  - id: isort
    files: ^src/

# Python linting with Ruff
- repo: https://github.com/astral-sh/ruff-pre-commit
  rev: v0.8.2
  hooks:
  - id: ruff
    args: [--fix]
    files: ^src/

# Python type checking
- repo: https://github.com/pre-commit/mirrors-mypy
  rev: v1.13.0
  hooks:
  - id: mypy
    additional_dependencies: [
      types-requests,
      types-PyYAML,
      types-setuptools,
      types-redis,
      types-jwt
    ]
    args: [--config-file=pyproject.toml]
    files: ^src/

# Python security checks
- repo: https://github.com/PyCQA/bandit
  rev: 1.8.0
  hooks:
  - id: bandit
    args: ['-c', 'pyproject.toml']
    additional_dependencies: ['bandit[toml]']

# Secrets scanning
- repo: https://github.com/Yelp/detect-secrets
  rev: v1.5.0
  hooks:
  - id: detect-secrets
    args: [
      '--baseline', '.secrets.baseline',
      '--exclude-files', 'poetry.lock',
      '--exclude-files', '.*test.*'
    ]

# Dockerfile linting
- repo: https://github.com/hadolint/hadolint
  rev: v2.13.1-beta
  hooks:
  - id: hadolint
    args: [
      '--ignore', 'DL3008',
      '--ignore', 'DL3013',
      '--ignore', 'DL3059'
    ]
    files: ^Dockerfile$|^dockerfiles/.*

# Docker Compose validation
- repo: https://github.com/IamTheFij/docker-pre-commit
  rev: v3.0.1
  hooks:
  - id: docker-compose-check

# YAML linting
- repo: https://github.com/adrienverge/yamllint
  rev: v1.35.1
  hooks:
  - id: yamllint
    args: [-c=.yamllint.yaml]

# Terraform checks
- repo: https://github.com/antonbabenko/pre-commit-terraform
  rev: v1.96.2
  hooks:
  - id: terraform_fmt
  - id: terraform_validate
  - id: terraform_tflint
  - id: terraform_checkov

# Shell script checks
# - repo: https://github.com/shellcheck-py/shellcheck-py
#   rev: v0.10.0.1
#   hooks:
#   - id: shellcheck
#     args: ['-x']

# Commit message checks
- repo: https://github.com/commitizen-tools/commitizen
  rev: v4.1.0
  hooks:
  - id: commitizen
    stages: [commit-msg]
