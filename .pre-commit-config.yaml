# .pre-commit-config.yaml
default_language_version:
  python: python3.11

# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # Git style
      - id: check-added-large-files
        args: ['--maxkb=500']
      - id: check-merge-conflict
      - id: check-vcs-permalinks
      - id: no-commit-to-branch
        args: [--branch, main, --branch, master]
      
      # Common errors
      - id: end-of-file-fixer
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: check-ast
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: check-symlinks
      - id: debug-statements
      
      # Security
      - id: detect-aws-credentials
        args: [--allow-missing-credentials]
      - id: detect-private-key
      
      # Syntax validation
      - id: check-toml
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-json
      - id: check-xml
      
      # Python specific
      - id: fix-encoding-pragma
        args: [--remove]
      - id: name-tests-test
        args: ['--pytest-test-first']
      - id: requirements-txt-fixer

  # Sort Python imports
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        name: isort (python)
        args: ["--profile", "black", "--filter-files"]

  # Python code formatter
  - repo: https://github.com/psf/black
    rev: 24.1.1
    hooks:
      - id: black
        language_version: python3.11
        args: [--config=pyproject.toml]

  # Python linter
  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: v0.1.14
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]

  # MyPy static type checker
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies:
          - types-all
        args: [--config-file=pyproject.toml]

  # Security checks
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.7
    hooks:
      - id: bandit
        args: ["-c", "pyproject.toml"]
        additional_dependencies: ["bandit[toml]"]

  # Check for missing docstrings
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args:
          - --convention=google
          - --add-ignore=D100,D104

  # Poetry lock file check
  - repo: https://github.com/python-poetry/poetry
    rev: '1.7.0'
    hooks:
      - id: poetry-check
      - id: poetry-lock
        args: ["--check"]

  # Check Dockerfile best practices
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint
        args: ['--ignore', 'DL3008', '--ignore', 'DL3013']

  # For markdown files
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.39.0
    hooks:
      - id: markdownlint
        args: ["--config", ".markdownlint.yaml"]

  # Autoformat Python code to Google style
  - repo: https://github.com/google/yapf
    rev: v0.40.2
    hooks:
      - id: yapf
        args: ["--style", "google", "--parallel"]

  # Local hooks
  - repo: local
    hooks:
      # Prevent commits with FIXME or TODO
      - id: forbidden-words
        name: Check for forbidden words
        entry: python src/tests/check_forbidden_words.py
        language: python
        types: [python]
        exclude: ^docs/